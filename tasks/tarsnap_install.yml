# Tarsnap download and installation
---

- name: Download the current tarsnap code signing key
  when: tarnsap_installed|failed
  get_url:
    url=https://www.tarsnap.com/tarsnap-signing-key.asc
    dest=/root/tarsnap-signing-key.asc

- name: Add the tarsnap code signing key to your list of keys
  when: tarnsap_installed|failed
  command:
    gpg --import tarsnap-signing-key.asc
    chdir=/root/

- name: Download tarsnap SHA file
  when: tarnsap_installed|failed
  get_url:
    url="https://www.tarsnap.com/download/tarsnap-sigs-{{ tarsnap_version }}.asc"
    dest="/root/tarsnap-sigs-{{ tarsnap_version }}.asc"

- name: get the SHA256sum for this tarsnap release
  when: tarnsap_installed|failed
  shell: >
    gpgResult=`gpg --decrypt tarsnap-sigs-{{ tarsnap_version }}.asc 2>/dev/null`;
    echo ${gpgResult#*=};
  args:
    executable: /bin/bash
    chdir: /root
  tags:
    - skip_ansible_lint
  register: tarsnap_sha

- name: Download Tarsnap source
  when: tarnsap_installed|failed
  get_url:
    url="https://www.tarsnap.com/download/tarsnap-autoconf-{{ tarsnap_version }}.tgz"
    dest="/root/tarsnap-autoconf-{{ tarsnap_version }}.tgz"
    sha256sum={{ tarsnap_sha.stdout_lines[0] }}

- name: Decompress Tarsnap source
  when: tarnsap_installed|failed
  unarchive:
    src=/root/tarsnap-autoconf-{{ tarsnap_version }}.tgz
    copy=no
    dest=/root
    creates=/root/tarsnap-autoconf-{{ tarsnap_version }}/COPYING

- name: Configure Tarsnap for local build
  when: tarnsap_installed|failed
  command: ./configure chdir=/root/tarsnap-autoconf-{{ tarsnap_version }} creates=/root/tarsnap-autoconf-{{ tarsnap_version }}/Makefile

- name: Build and install Tarsnap
  when: tarnsap_installed|failed
  command: make all install clean chdir=/root/tarsnap-autoconf-{{ tarsnap_version }} creates=/usr/local/bin/tarsnap

